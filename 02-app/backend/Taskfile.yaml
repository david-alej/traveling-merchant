version: "3"

vars:
  CONTAINER_DB_URL: "postgres://{{.DB_USER}}:{{.DB_PASSWORD}}@db:5432/{{.DB_NAME}}"
  DATABASE_URL: "postgres://{{.DB_USER}}:{{.DB_PASSWORD}}@localhost:5432/{{.DB_NAME}}"
  IMAGE_REPO: davidalej/traveling-merchant-backend
  IMAGE_TAG: prod

tasks:
  build-container-image:
    desc: Build container image
    cmds:
      - docker build -t {{.IMAGE_REPO}}{{.IMAGE_TAG}} .

  build-testing-image:
    desc: Build container testing image and push it to docker hub.
    cmds:
      - |
        docker buildx build \
          -t {{.IMAGE_REPO}}:{{.IMAGE_TAG}} \
          --target dev \
          --push \
          .

  build-container-image-multi-arch:
    desc: Build multi-arch container image
    cmds:
      - |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t {{.IMAGE_REPO}}:{{.IMAGE_TAG}} \
          --push \
          .

  run-ci-unit-tests:
    desc: Run ci unit tests locally.
    cmds:
      - docker run --rm {{.IMAGE_REPO}}:{{.IMAGE_TAG}} npm run ci-unit-test

  run-migrations:
    desc: Execute migrations
    cmds:
      - |
        docker run -d \
          --name migrations \
          --network {{.BACKEND_NETWORK}} \
          -e DATABASE_URL={{.CONTAINER_DB_URL}} \
          {{.IMAGE_REPO}}:{{.IMAGE_TAG}} \
          npm run prod-migration

  install:
    desc: install dependencies
    cmds:
      - npm install

  run:
    desc: Start node api
    cmds:
      - npx cross-env DATABASE_URL={{.DATABASE_URL}} npm run dev
